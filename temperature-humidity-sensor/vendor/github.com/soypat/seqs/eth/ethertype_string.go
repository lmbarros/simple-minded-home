// Code generated by "stringer -type=EtherType -trimprefix=EtherType"; DO NOT EDIT.

package eth

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EtherTypeIPv4-2048]
	_ = x[EtherTypeARP-2054]
	_ = x[EtherTypeWakeOnLAN-2114]
	_ = x[EtherTypeTRILL-8947]
	_ = x[EtherTypeDECnetPhase4-24579]
	_ = x[EtherTypeRARP-32821]
	_ = x[EtherTypeAppleTalk-32923]
	_ = x[EtherTypeAARP-33011]
	_ = x[EtherTypeIPX1-33079]
	_ = x[EtherTypeIPX2-33080]
	_ = x[EtherTypeQNXQnet-33284]
	_ = x[EtherTypeIPv6-34525]
	_ = x[EtherTypeEthernetFlowControl-34824]
	_ = x[EtherTypeIEEE802_3-34825]
	_ = x[EtherTypeCobraNet-34841]
	_ = x[EtherTypeMPLSUnicast-34887]
	_ = x[EtherTypeMPLSMulticast-34888]
	_ = x[EtherTypePPPoEDiscovery-34915]
	_ = x[EtherTypePPPoESession-34916]
	_ = x[EtherTypeJumboFrames-34928]
	_ = x[EtherTypeHomePlug1_0MME-34939]
	_ = x[EtherTypeIEEE802_1X-34958]
	_ = x[EtherTypePROFINET-34962]
	_ = x[EtherTypeHyperSCSI-34970]
	_ = x[EtherTypeAoE-34978]
	_ = x[EtherTypeEtherCAT-34980]
	_ = x[EtherTypeEthernetPowerlink-34987]
	_ = x[EtherTypeLLDP-35020]
	_ = x[EtherTypeSERCOS3-35021]
	_ = x[EtherTypeHomePlugAVMME-35041]
	_ = x[EtherTypeMRP-35043]
	_ = x[EtherTypeIEEE802_1AE-35045]
	_ = x[EtherTypeIEEE1588-35063]
	_ = x[EtherTypeIEEE802_1ag-35074]
	_ = x[EtherTypeFCoE-35078]
	_ = x[EtherTypeFCoEInit-35092]
	_ = x[EtherTypeRoCE-35093]
	_ = x[EtherTypeCTP-36864]
	_ = x[EtherTypeVeritasLLT-51966]
	_ = x[EtherTypeVLAN-33024]
	_ = x[EtherTypeServiceVLAN-34984]
}

const _EtherType_name = "IPv4ARPWakeOnLANTRILLDECnetPhase4RARPAppleTalkAARPVLANIPX1IPX2QNXQnetIPv6EthernetFlowControlIEEE802_3CobraNetMPLSUnicastMPLSMulticastPPPoEDiscoveryPPPoESessionJumboFramesHomePlug1_0MMEIEEE802_1XPROFINETHyperSCSIAoEEtherCATServiceVLANEthernetPowerlinkLLDPSERCOS3HomePlugAVMMEMRPIEEE802_1AEIEEE1588IEEE802_1agFCoEFCoEInitRoCECTPVeritasLLT"

var _EtherType_map = map[EtherType]string{
	2048:  _EtherType_name[0:4],
	2054:  _EtherType_name[4:7],
	2114:  _EtherType_name[7:16],
	8947:  _EtherType_name[16:21],
	24579: _EtherType_name[21:33],
	32821: _EtherType_name[33:37],
	32923: _EtherType_name[37:46],
	33011: _EtherType_name[46:50],
	33024: _EtherType_name[50:54],
	33079: _EtherType_name[54:58],
	33080: _EtherType_name[58:62],
	33284: _EtherType_name[62:69],
	34525: _EtherType_name[69:73],
	34824: _EtherType_name[73:92],
	34825: _EtherType_name[92:101],
	34841: _EtherType_name[101:109],
	34887: _EtherType_name[109:120],
	34888: _EtherType_name[120:133],
	34915: _EtherType_name[133:147],
	34916: _EtherType_name[147:159],
	34928: _EtherType_name[159:170],
	34939: _EtherType_name[170:184],
	34958: _EtherType_name[184:194],
	34962: _EtherType_name[194:202],
	34970: _EtherType_name[202:211],
	34978: _EtherType_name[211:214],
	34980: _EtherType_name[214:222],
	34984: _EtherType_name[222:233],
	34987: _EtherType_name[233:250],
	35020: _EtherType_name[250:254],
	35021: _EtherType_name[254:261],
	35041: _EtherType_name[261:274],
	35043: _EtherType_name[274:277],
	35045: _EtherType_name[277:288],
	35063: _EtherType_name[288:296],
	35074: _EtherType_name[296:307],
	35078: _EtherType_name[307:311],
	35092: _EtherType_name[311:319],
	35093: _EtherType_name[319:323],
	36864: _EtherType_name[323:326],
	51966: _EtherType_name[326:336],
}

func (i EtherType) String() string {
	if str, ok := _EtherType_map[i]; ok {
		return str
	}
	return "EtherType(" + strconv.FormatInt(int64(i), 10) + ")"
}
